(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{407:function(a,s,e){"use strict";e.r(s);var t=e(0),n=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"移动端网页应用项目及开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#移动端网页应用项目及开发"}},[a._v("#")]),a._v(" 移动端网页应用项目及开发")]),a._v(" "),s("h2",{attrs:{id:"移动web开发基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#移动web开发基础"}},[a._v("#")]),a._v(" 移动web开发基础")]),a._v(" "),s("h3",{attrs:{id:"_1-兼容移动端主流浏览器-处理webkit内核即可"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-兼容移动端主流浏览器-处理webkit内核即可"}},[a._v("#")]),a._v(" 1. 兼容移动端主流浏览器，处理webkit内核即可；")]),a._v(" "),s("h3",{attrs:{id:"_2-作为开发者无需关注分辨率-因为常用的尺寸单位是px-后续有手段解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-作为开发者无需关注分辨率-因为常用的尺寸单位是px-后续有手段解决"}},[a._v("#")]),a._v(" 2. 作为开发者无需关注分辨率，因为常用的尺寸单位是px，后续有手段解决；")]),a._v(" "),s("h3",{attrs:{id:"_3-常见移动端屏幕尺寸可参考-https-material-io-devices"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-常见移动端屏幕尺寸可参考-https-material-io-devices"}},[a._v("#")]),a._v(" 3. 常见移动端屏幕尺寸可参考：https://material.io/devices；")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("前端开发不建议纠结dp、doi、pt、ppi等单位；关注dpr，物理像素比；\n")])])]),s("h3",{attrs:{id:"_4-移动端调试方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-移动端调试方法"}},[a._v("#")]),a._v(" 4. 移动端调试方法：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、Chrome DevTools的模拟手机调试（目前阶段使用）；\n2、搭建本地web服务器，手机和服务器一个局域网内，通过手机访问服务器；\n3、使用外网服务器访问；\n")])])]),s("h3",{attrs:{id:"_5-视口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-视口"}},[a._v("#")]),a._v(" 5. 视口")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1. 布局视口  网页布置的视口\n2. 视觉视口  手机看到的视口\n3. 理想视口  手动添加<meta>视口标签通知浏览器操作，\n添加<meta>视口标签的目的：布局视口的宽度应该与理想视口的宽度一致，\n简单理解就是设备有多宽，我们布局的视口就有多宽\n")])])]),s("h3",{attrs:{id:"_6-视口标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-视口标签"}},[a._v("#")]),a._v(" 6. 视口标签")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<meta name="viewport" content="width=device-width, user-scalable=no\n,initial-scale=1.0,maximum-scale=1.0, minimum-scale=1.0">\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("    视口宽度和设备保持一致\n    不允许用户自行缩放\n    视口的默认缩放比例1.0\n    最大允许的缩放比例1.0\n    最小允许的缩放比例1.0 \n")])])]),s("h3",{attrs:{id:"_7-多倍图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-多倍图"}},[a._v("#")]),a._v(" 7. 多倍图")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("问题：如果一个50*50px的图片放到Retina手机屏幕中，占有的物理像素点是100*100个，会造成图片模糊\n解决方法：使用一个本身就是100*100px 的图片去进行制作，替换原来的图片，然后设置图片的尺寸为50*50px\n启动图尺寸用来切图，开发尺寸用来切完图设置图的大小\n")])])]),s("h3",{attrs:{id:"_8-移动端主流方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-移动端主流方案"}},[a._v("#")]),a._v(" 8. 移动端主流方案")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1.单独制作移动端页面（主流）：京东商城手机版，淘宝触屏版，苏宁易购手机版，携程网手机版等；通常在网址域名前添加m，可以打开移动端；\n    流式布局（百分比布局）；\n    flex弹性布局（强烈推荐）； \n    less+rem+媒体查询布局；\n    混合布局；\n2.响应式页面兼容移动端（其次）：三星手机官网等；\n    媒体查询；\n    bootstrap；\n")])])]),s("h3",{attrs:{id:"_9-css初始化-normalize-css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-css初始化-normalize-css"}},[a._v("#")]),a._v(" 9.CSS初始化 normalize.css")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("是可定制的CSS文件，他让不同的浏览器在渲染网页元素的时候形式更统一\n优点：保护了有价值的默认值；修复了浏览器的bug，解决了浏览器不一致的默认样式，提高了易用性，且具有详细的解释文档；\n官网地址：http://neocolas.github.io/normalize.css\n")])])]),s("h3",{attrs:{id:"_10-css3盒子模型box-sizing-border-box"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-css3盒子模型box-sizing-border-box"}},[a._v("#")]),a._v(" 10.CSS3盒子模型box-sizing：border-box")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("移动端可以全部使用border-box\nPC端如果完全需要兼容，就用content-box，如果不考虑兼容性，就选择border-box\n")])])]),s("h3",{attrs:{id:"_11-特殊样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-特殊样式"}},[a._v("#")]),a._v(" 11. 特殊样式")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、\x3c!-- 点击高亮清除 --\x3e\n    -webkit-tap-highlight-color:transparent;\n2、\x3c!-- 在移动端浏览器默认的外观在ios上加上这个属性才能给按钮和输入框自定义样式 --\x3e\n    -webkit-appearance:none;\n3、\x3c!-- 禁用长按页面时弹出菜单 --\x3e\n    img,a{-webkit-touch-callout:none;}\n")])])]),s("h3",{attrs:{id:"_12-流式布局-百分比布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-流式布局-百分比布局"}},[a._v("#")]),a._v(" 12.流式布局（百分比布局）")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("通过将盒子的宽度设置成百分比，从而根据屏幕的宽度来进行伸缩，不受固定像素的限制，内容向两侧填充\n1、max（min）-width最大（小）宽度；max（min）-height最大（小）高度\n2、京东顶部的fix内容一般以iphone6.7.8为标准制作，设置了10px，但是有的是二倍图有的是三倍图，所以大小会有变化\n")])])]),s("h3",{attrs:{id:"_13-二倍精灵图做法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-二倍精灵图做法"}},[a._v("#")]),a._v(" 13. 二倍精灵图做法")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("在firework里面把精灵图等比例缩放为原来的一半；\n之后根据新的大小测量坐标；\n注意代码里面background-size也要写:精灵图原来宽度的一半(是整个画布)；\n")])])]),s("h3",{attrs:{id:"_14-图片技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-图片技术"}},[a._v("#")]),a._v(" 14. 图片技术")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DPG图片压缩技术：京东自主研发，节省用户近50%的浏览流量，极大的提升了用户网页打开的速度，兼容jpeg，实现全平台，全浏览器的兼容，测试和图片和webp的清晰度没有差距\nwebp图片格式：谷歌研发，旨在加快图片加载技术，图片压缩体积大约只有JPEG的2/3，并能节省大量的服务器带宽资源和数据空间\n")])])]),s("h3",{attrs:{id:"_15-background-image-linear-gradient-0deg-f1503b-c82519-50"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-background-image-linear-gradient-0deg-f1503b-c82519-50"}},[a._v("#")]),a._v(" 15. background-image: linear-gradient(0deg, #f1503b, #c82519 50%)")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("这是背景的渐变色属性\n")])])]),s("h2",{attrs:{id:"flex布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex布局"}},[a._v("#")]),a._v(" flex布局")]),a._v(" "),s("h6",{attrs:{id:"_1、flex布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、flex布局"}},[a._v("#")]),a._v(" 1、flex布局")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("flex是flexible box的缩写，弹性布局的意思，任何一个容器都可以指定为flex布局\n当父盒子设为flex布局以后，子元素的float、clear和vertical-align属性将失效\n伸缩布局=弹性布局=伸缩盒布局=弹性盒布局=flex布局\n默认情况下，x轴=行=主轴，y轴=列=副轴\n")])])]),s("h6",{attrs:{id:"_2、flex布局父项常见属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、flex布局父项常见属性"}},[a._v("#")]),a._v(" 2、flex布局父项常见属性")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("flex-direction：设置主轴方向\n    属性值  row 默认值，左到右\n            row-reverse，右到左\n            column 上到下\n            column-reverse 下到上        \njustify-content：设置主轴上子元素排列方式\n    属性值  flex-start 默认值，从头部开始，如果主轴是x轴，则从左到右\n            flex-end 从尾部开始排列\n            center 在主轴居中对齐（如果主轴是x轴则水平居中）\n            space-around 平分剩余空间\n            space-between 先两边贴边，再平分剩余空间（重要）\nflex-wrap：设置子元素是否换行\n    属性值  nowrap 默认值，不换行\n            wrap 换行\nalign-content：设置侧轴上的子元素的排列方式（多行）\n    属性值  flex-start 在侧轴的头部开始排列\n            flex-end 在侧轴的尾部开始排列\n            center 在侧轴的中间显示\n            space-around 子项在侧轴平分剩余空间\n            space-between 子项在侧轴先平均分布在两头，再平分剩余空间\n            stretch 设置子项元素高度平分父元素高度\n        注：单行情况下无效\nalign-items：设置侧轴上的子元素的排列方式（单行）\n    该属性是控制子项在侧轴（默认是y轴）上的排列方式\n    在子项为单项（单行）的时候使用 \n    属性值  flex-start 从上到下\n            flex-end 从下到上\n            center 挤在一起居中（垂直居中）\n            stretch 拉伸（向着远离主轴的方向拉伸）\nflex-flow：复合属性，相当于同时设置了flex-direction盒flex-wrap\n")])])]),s("h6",{attrs:{id:"_3、flex布局子项常见属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、flex布局子项常见属性"}},[a._v("#")]),a._v(" 3、flex布局子项常见属性")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("flex：设置子项的份数，定义子项目分配父盒子的剩余空间，用flex来表示占多少份数。\n    属性值 数字，默认值为0，数字1表示占总份数中的1份\nalign-self: 控制子项自己在侧轴的排列方式，允许单个项目有与其他项不一样的对齐方式，可覆盖align-items属性\n    属性值  默认auto，表示继承父元素的align-items属性，如果没有父元素则等同于stretch\norder: 属性，定义子项的排列顺序（前后顺序）\n    属性值  数字，数值越小，排列越靠前，默认为0，如果想往前提，属性值可以负数\n        注意：和z-index不一样\n")])])]),s("h2",{attrs:{id:"rem适配布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rem适配布局"}},[a._v("#")]),a._v(" rem适配布局")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("rem+媒体查询\n")])])]),s("h4",{attrs:{id:"_1、rem单位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、rem单位"}},[a._v("#")]),a._v(" 1、rem单位")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("em：相对单位，参考的是父级元素的字号大小的倍数，如果是2em表示字号的2倍；\nrem是一个相对的单位，类似em，但是em是父元素字体大小；\nrem的基准是相对于<html>元素的字体大小；\n比如：根元素（html）设置font-size=12px；非根元素设置width：2rem；转换为px表示就是24px；\nrem的优势：父元素文字大小可能不一致，但是整个页面只有一个<html>,可以很好的来控制整个页面的元素大小比例。\n")])])]),s("h4",{attrs:{id:"_2、媒体查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、媒体查询"}},[a._v("#")]),a._v(" 2、媒体查询")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("使用@media查询，可以针对不同的媒体类型定义不同的样式；\n@media可以针对不同的屏幕尺寸设置不同的样式；\n当你重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面；\n目前针对很多苹果手机、安卓手机、平板等设备都用得到多媒体查询\n媒体查询的 max-width，和min-width都是包含等于的，所以要注意端点的选择\n")])])]),s("h6",{attrs:{id:"_1、语法规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、语法规范"}},[a._v("#")]),a._v(" 1、语法规范")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、用@media开头，注意@符号\n2、mediatype媒体类型\n3、关键字and not only\n4、media feature 媒体属性 必须有小括号包含：@media mediatype and丨not丨only （media feature） {CSS-Code}\n5、only为了解决某一些浏览器内的不兼容问题出现的\n")])])]),s("h6",{attrs:{id:"_2、根据页面宽度改变背景颜色"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、根据页面宽度改变背景颜色"}},[a._v("#")]),a._v(" 2、根据页面宽度改变背景颜色")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、按照从大到小或者从小到大的思路；\n2、注意我们有最大值max-width和最小值min-width都是包含等于的；\n3、当屏幕小于540像素，背景颜色变为蓝色（x<=539）;\n4、当屏幕大于等于540并且小于等于969像素的时候背景颜色为绿色（540=<x<969）;\n5、当屏幕大于等于970像素的时候，背景颜色为红色（x>=970）\n注意：为了防止混乱，媒体查询我们要按照从小到大或者从大到小的顺序来写，但是我们最喜欢的还是从小到大来写，这样代码更简洁\n")])])]),s("h6",{attrs:{id:"_3、引入资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、引入资源"}},[a._v("#")]),a._v(" 3、引入资源")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v('示例：<link rel="stylesheet" href="style.css" media="screen and (min-width:400px)">\n')])])]),s("h4",{attrs:{id:"_3、rem适配方案技术使用-市场主流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、rem适配方案技术使用-市场主流"}},[a._v("#")]),a._v(" 3、rem适配方案技术使用（市场主流）")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("技术方案1：less+媒体查询+rem\n            iphone678 750px\n            Android 1080px为主\n            一般情况下，我们以一套或两套效果图适应大部分的屏幕，放弃极端屏或对其优雅降级，牺牲一些效果，现在基本以750px为准 \n            页面元素的单位rem值 = 页面元素值px / html font-size字体大小 \n技术方案2：flexible.js+rem（推荐 ）\n两种方案现在都存在，方案二更简单；\n")])])]),s("h4",{attrs:{id:"_4、更改flexible-js默认字号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、更改flexible-js默认字号"}},[a._v("#")]),a._v(" 4、更改flexible.js默认字号")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("@media screen and (min-width: 750px) {\n    html {\n        font-size: 75px !important;\n        \x3c!-- 加important是因为html标签的权重在flexible.js下不够高 --\x3e\n    }\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("h2",{attrs:{id:"css弊端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css弊端"}},[a._v("#")]),a._v(" CSS弊端")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("css是一门非程序式语言，没有变量，函数，SCOPE（作用域）等概念\ncss需要书写大量看似没有逻辑的代码，css冗余度比较高\n不方便维护以及扩展，不利于复用\ncss没有很好的计算能力\n非前段开发工程师来讲，往往会因为缺少CSS编写经验而很难写出组织良好且易于维护的css代码\n")])])]),s("h2",{attrs:{id:"less"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#less"}},[a._v("#")]),a._v(" less")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v('Less是一门CSS预处理语言，它扩展了CSS的动态特性\n若使用Less，需要先新建一个后缀名为 .less的文件，在这个 .less文件里书写Less语句\nLess文件内，可以导入less文件，方法：在需要引入的less文件内部，写入：@import "文件名（无后缀）"\n')])])]),s("h6",{attrs:{id:"_1、less变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、less变量"}},[a._v("#")]),a._v(" 1、Less变量")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("命名规范：必须以@为前缀；\n         不能包含特殊字符\n         不能以数字开头\n         大小写敏感\n         如：@color：pink；\n")])])]),s("h6",{attrs:{id:"_2、less编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、less编译"}},[a._v("#")]),a._v(" 2、Less编译")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("Less文件不能被html调用，所以需要把 .Less文件编译生成为 .css文件\n推荐方法（node.js）:在当前文件夹，使用cmd命令“lessc style.css>style.css”\n")])])]),s("h6",{attrs:{id:"_3、less嵌套"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、less嵌套"}},[a._v("#")]),a._v(" 3、Less嵌套")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CSS\n#header {\n    width:350px;\n}\n#header .logo {\n    width: 300px;\n}\n等价于\nLess\n#header{\n    width：350px;\n    .logo {\n        width:300px;\n    }\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("如果遇见（交集丨伪类丨伪元素选择器）\n内层选择器的前面没有&符号，则它被解析为父选择器的后代\n若有&符号，它就被解析为父元素自身或父元素的伪类\nCSS\na:hover {\n    color:red;\n}\nLess\na{\n    &:hover {\n        color:red;\n    }\n} \n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br")])]),s("h6",{attrs:{id:"_4、less运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、less运算"}},[a._v("#")]),a._v(" 4、Less运算")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("任何数字、颜色或者变量都可以参与运算，Less提供了+-*/\n注意：1、参与元算的两个数字，可以一个有单位，一个没单位，最终单位就是唯一的那个单位\n    如 width：200px + 50； 计算值为250px\n     2、参与运算的两个数字，两个都有单位，最终单位取第一个数字的单位\n    如 width：200px + 50px； 计算值为250px\n       width:(200rem / 50px)； 计算值为4rem （除法需要加括号）\n     3、也可以做变量运算\n        @variable1=1px；\n        @variable2=2px\n        width：@variable1 + @variable2； 计算值为3px\n     4、Less运算符左右必须加空格\n")])])]),s("h2",{attrs:{id:"响应式布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应式布局"}},[a._v("#")]),a._v(" 响应式布局")]),a._v(" "),s("h3",{attrs:{id:"响应式开发原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应式开发原理"}},[a._v("#")]),a._v(" 响应式开发原理")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("就是使用媒体查询针对不同宽度的设备进行布局和样式的设计，从而适配不同设备的目的\n")])])]),s("h3",{attrs:{id:"响应式布局容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应式布局容器"}},[a._v("#")]),a._v(" 响应式布局容器")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("响应式需要一个父级作为布局容器，来配合子级元素来实现变化效果；\n原理就是在不同屏幕下，通过媒体查询来改变布局容器（版心）的大小，再改变容器内子元素的排列方式和大小，从而实现不同屏幕下，不同的布局样式；\n响应式尺寸划分：\n超小屏幕（手机，小于768px），设置100%；\n小屏幕（平板，大于等于768px），布局容器宽度：750px；\n中等屏幕（桌面显示器，大于等于992px），布局容器宽度：970px；\n大屏幕（大桌面显示器，大于等于1200px），布局容器宽度：1170px；\n也可根据实际情况自己定义\n")])])]),s("h2",{attrs:{id:"bootstrap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap"}},[a._v("#")]),a._v(" Bootstrap")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("成熟且流行的前端框架之一，3.x.x版本使用的最多，此版本偏向用于开发响应式布局\n")])])]),s("h3",{attrs:{id:"bootstrap使用四部曲"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap使用四部曲"}},[a._v("#")]),a._v(" Bootstrap使用四部曲")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、创建文件夹结构；2、创建html骨架结构（参考Bootstrap官网）； 3、引入相关样式文件； 4、书写内容；\n")])])]),s("h3",{attrs:{id:"bootstrap布局容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap布局容器"}},[a._v("#")]),a._v(" Bootstrap布局容器")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("Bootstrap需要为页面内容和栅格系统包裹一个 .container容器\n1、 .container类：响应式布局的容器，固定宽度\n                 大屏（>=1200px） -1170px   .col-lg-\n                 中屏（>=992px） -970px     .col-md-\n                 大屏（>=768px） -750px     .col-sm-\n                 超小屏（100%）             .col-xs-\n2、 .container-fluid类：流式布局容器 百分百宽度\n                        占据全部视口的容器\n                        适合于制作移动端开发页面\n")])])]),s("h3",{attrs:{id:"boostrap栅格系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boostrap栅格系统"}},[a._v("#")]),a._v(" Boostrap栅格系统")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("按照不同屏幕划分为1~12等份\n.container最大宽度  类前缀\n大屏（>=1200px）  .col-lg-\n中屏（>=992px）   .col-md-\n小屏（>=768px）   .col-sm-\n超小屏（100%）    .col-xs-\ncol-lg-3 占三列\n.container默认有左右15px的padding\n所有栅格里的列也有默认的左右边距\n行（row）可以去除父容器作用15px的边距\n")])])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="container">\n    <div class="row"></div>\n    \x3c!-- 这个.row类会清楚掉container的左右各15px的边距 --\x3e\n</div>\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[s("font",{attrs:{color:"red"}},[a._v("每种屏幕都需要设置份数，如果不设置，那么在当前屏幕大小下，就是占所有份；")])],1),a._v(" "),s("h6",{attrs:{id:"_1、列嵌套"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、列嵌套"}},[a._v("#")]),a._v(" 1、列嵌套")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("栅格系统内置的栅格系统将内容再次嵌套，就是把1/12再分12份；\n")])])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div class="col-sm-4">\n    <div class="row">\n        <div class="col-sm-6">小列</div>\n        <div class="col-sm-6">小列</div>\n    </div>\n</div>\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("h6",{attrs:{id:"_2、列偏移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、列偏移"}},[a._v("#")]),a._v(" 2、列偏移")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("使用 .col-md-offset-份数类可以将列向右偏移（这些类实际上是通过选择器为当前元素增加了左侧margin\n")])])]),s("h6",{attrs:{id:"_3、列排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、列排序"}},[a._v("#")]),a._v(" 3、列排序")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("通过使用 .col-md-push-份数往右推和 .col-md-pull-份数往左拉两个类就可以很容易的改变列（column）的顺序\n")])])]),s("h6",{attrs:{id:"_4、响应式工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、响应式工具"}},[a._v("#")]),a._v(" 4、响应式工具")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("类名")]),a._v(" "),s("th",[a._v("超小屏")]),a._v(" "),s("th",[a._v("小屏")]),a._v(" "),s("th",[a._v("中屏")]),a._v(" "),s("th",[a._v("大屏")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v(".hidden-xs")]),a._v(" "),s("td",[a._v("隐藏")]),a._v(" "),s("td",[a._v("可见")]),a._v(" "),s("td",[a._v("可见")]),a._v(" "),s("td",[a._v("可见")])]),a._v(" "),s("tr",[s("td",[a._v(".hidden-sm")]),a._v(" "),s("td",[a._v("可见")]),a._v(" "),s("td",[a._v("隐藏")]),a._v(" "),s("td",[a._v("可见")]),a._v(" "),s("td",[a._v("可见")])]),a._v(" "),s("tr",[s("td",[a._v(".hidden-md")]),a._v(" "),s("td",[a._v("可见")]),a._v(" "),s("td",[a._v("可见")]),a._v(" "),s("td",[a._v("隐藏")]),a._v(" "),s("td",[a._v("可见")])]),a._v(" "),s("tr",[s("td",[a._v(".hidden-lg")]),a._v(" "),s("td",[a._v("可见")]),a._v(" "),s("td",[a._v("可见")]),a._v(" "),s("td",[a._v("可见")]),a._v(" "),s("td",[a._v("隐藏")])])])]),a._v(" "),s("p",[a._v("与之相反的，visible-屏幕大小，是针对不同设备显示某个内容\n"),s("font",{attrs:{color:"red"}},[a._v("形如.col-md-X的类名不是更改样式的首选，这是属于Boostrap的默认类名，更改样式倾向于选择具有含义的类名")]),a._v("\nBootstrap 功能很强大，涵盖了许多的内容，\n如：h的样式，排版，图片是否响应，图片的形状，表格的样式，文字颜色等这些都是可以通过添加类名来实现的，基本上都可以网站的说明查到解决的方法")],1)])}),[],!1,null,null,null);s.default=n.exports}}]);