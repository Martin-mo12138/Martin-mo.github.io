(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{409:function(s,n,a){"use strict";a.r(n);var t=a(0),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"_4、操作符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、操作符"}},[s._v("#")]),s._v(" 4、操作符")]),s._v(" "),n("p",[s._v("表达式\n表达式的组成包含操作数和操作符，表达式会得到一个结果，然后用结果参与程序；")]),s._v(" "),n("h4",{attrs:{id:"算术运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[s._v("#")]),s._v(" 算术运算符")]),s._v(" "),n("p",[s._v("即：+-*/%()\n%：取余\n运算顺序：先算乘除取余，再算加减，有小括号先算小括号；")]),s._v(" "),n("h5",{attrs:{id:"非正常情况1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#非正常情况1"}},[s._v("#")]),s._v(" 非正常情况1")]),s._v(" "),n("p",[s._v("NaN参与的运算：得到的结果都是NaN；\nInfinity参与的运算视情况而定")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    console.log(Infinity%5); →NaN\n    console.log(5%Infinity); →5\n    console.log(5/Infinity); →0\n    console.log(Infinity+Infinity); →Infinity\n    console.log(Infinity-Infinity); →NaN\n    console.log(Infinity*Infinity); →Infinity\n    console.log(Infinity/Infinity); →NaN\n    console.log(Infinity%Infinity); →NaN\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h5",{attrs:{id:"非正常情况2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#非正常情况2"}},[s._v("#")]),s._v(" 非正常情况2")]),s._v(" "),n("p",[s._v("有字符串参与的\n1、+运算：+号变为连字符将前后链接为整体字符串；\n2、+以外的运算，会对字符串进行隐式转换；")]),s._v(" "),n("p",[s._v("隐式转换：出了字符串参与的+运算，其他情况下，所有其他数据参与数学运算时，计算机暗中将其他数据先转换成数字类型，再参与运算，这个过程中不需要使用parseInt()、parseFloat()、Number()等方法，过程是暗中进行的；隐式转换得到的结果和Number()是一致的，因为隐式转换的目的就是为了进行数字运算；\n其他数据类型的隐式转换结果也和Number()相同")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<script>\n    console.log(1+"2"); →12\n    console.log(1-"2"); →-1\n    console.log(1*"2"); →2\n    console.log(1/"2"); →.5\n    console.log(1%"2"); →1\n    console.log(1+""); →1\n    console.log(1+"  "); →1\n    console.log(1+"123abc"); →NaN\n    console.log(1+true); →2\n    console.log(1+false); →1\n    console.log(1+undefined); →NaN\n    console.log(1+null); →1\n<\/script>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h4",{attrs:{id:"比较运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[s._v("#")]),s._v(" 比较运算符")]),s._v(" "),n("p",[s._v("也称关系运算符；比较操作数后返回一个布尔类型值；运算结果是true或者false；")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("符号")]),s._v(" "),n("th",[s._v("含义")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("<")]),s._v(" "),n("td",[s._v("大于")])]),s._v(" "),n("tr",[n("td",[s._v("<")]),s._v(" "),n("td",[s._v("小于")])]),s._v(" "),n("tr",[n("td",[s._v(">=")]),s._v(" "),n("td",[s._v("大于等于")])]),s._v(" "),n("tr",[n("td",[s._v("<=")]),s._v(" "),n("td",[s._v("小于等于")])]),s._v(" "),n("tr",[n("td",[s._v("==")]),s._v(" "),n("td",[s._v("相等，只判断值大小是否相等，不判断数据类型")])]),s._v(" "),n("tr",[n("td",[s._v("！=")]),s._v(" "),n("td",[s._v("不等，与相等完全相反")])]),s._v(" "),n("tr",[n("td",[s._v("===")]),s._v(" "),n("td",[s._v("全等，不光判断值相等，还要判断数据类型相等")])]),s._v(" "),n("tr",[n("td",[s._v("！==")]),s._v(" "),n("td",[s._v("不全等，与全等完全相反")])]),s._v(" "),n("tr",[n("td",[n("font",{attrs:{color:"red"}},[s._v("实际开发使用全等去比较的情况比较多，因为相等存在隐式转换；")])],1),s._v(" "),n("td")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    console.log(7>8); →false\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("比较运算符的运算顺序\n从前往后比较，前面的结果与后面的进行比较")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    console.log(3>2>1); →false\n    \x3c!-- 这是由于3>2返回true，true隐形转换为1,1 > 1 →false  --\x3e\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h5",{attrs:{id:"非正常情况1-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#非正常情况1-2"}},[s._v("#")]),s._v(" 非正常情况1")]),s._v(" "),n("p",[s._v("特殊值参与比较运算\nNaN参与：不等于和不全等于结果是true,其他的都是false；\nInfinity参与的运算视情况而定")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    console.log(NaN>8); →false\n    console.log(NaN!==8); →true\n    console.log(NaN!=8); →true\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    console.log(Infinity == Infinity); →true\n    \n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("font",{attrs:{color:"red"}},[s._v("虽然Infinity-Infinity→NaN但是JS规定 Infinity == Infinity返回ture(大于等于，小于等于也返回true)")])],1),s._v(" "),n("h5",{attrs:{id:"非正常情况2-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#非正常情况2-2"}},[s._v("#")]),s._v(" 非正常情况2")]),s._v(" "),n("p",[s._v("其他数据类型参与比较运算(排除字符串与字符串的比较)\n其他数据类型也会隐式转换为数字参与比较，隐式转换的结果和Number()的结果是一样的\n"),n("font",{attrs:{color:"dgreen"}},[s._v("其中null的判断比较特殊：\nnull与0判断时，相等判断为false，>=和<=判断为true")])],1),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    console.log(null == 0); →false\n    console.log(0<null); →false\n    console.log(null >= 0); →true\n    console.log(0>null); →false\n    console.log(null <= 0); →true\n    console.log(1>null); →true\n    console.log(-1<null); →true\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("这是由于我们认为null的值是左右两端趋向于0的；")]),s._v(" "),n("p",[n("font",{attrs:{color:"dgreen"}},[s._v("null和undefined的比较：")])],1),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    console.log(null == undefined); →true\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("这是由于我们认为undefined是null里派生出来的一个内容，所以两者相等，但数据类型又不是一种，所以不全等；")]),s._v(" "),n("h5",{attrs:{id:"非正常情况3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#非正常情况3"}},[s._v("#")]),s._v(" 非正常情况3")]),s._v(" "),n("p",[s._v("字符串和字符串比较\n不会发生隐式转换为数字，而是比较两个字符串的Unicode编码顺序；\n字符编码顺序：从前往后0-9，A-Z，a-z，前面的小于后面的\n比较时，不关系两个字符串的长度，从第一个字符开始比较，以此往后顺延比较，直到比较出大小就不在往后比较；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<script>\n    console.log(6 < "12"); → 6 < 12 →true\n    console.log("6" < "12"); → 6 < 1 →false\n    console.log("A"<"12"); →A < 1 →false\n    console.log("A"<"a12"); →A < a →true\n    console.log("banner"<"banana"); →b = b → a = a → n = n → n < a → false\n<\/script>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h4",{attrs:{id:"逻辑运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[s._v("#")]),s._v(" 逻辑运算符")]),s._v(" "),n("p",[s._v("逻辑运算符常用于布尔类型之间，当操作数都是布尔值时，返回值也是布尔值；")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("符号")]),s._v(" "),n("th",[s._v("含义")]),s._v(" "),n("th",[s._v("备注")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("&&")]),s._v(" "),n("td",[s._v("逻辑“与”运算符 且")]),s._v(" "),n("td",[s._v("都真才真，一假则假")])]),s._v(" "),n("tr",[n("td",[s._v("丨丨")]),s._v(" "),n("td",[s._v("逻辑“或”运算符")]),s._v(" "),n("td",[s._v("一真则真，全假则假")])]),s._v(" "),n("tr",[n("td",[s._v("！")]),s._v(" "),n("td",[s._v("逻辑“非”运算符")]),s._v(" "),n("td",[s._v("非真既假，非假既真")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    console.log(true && true); → true\n    console.log(false && true); → false\n    console.log(false && false); → false\n    console.log(true || true); → true\n    console.log(false || true); → true\n    console.log(false || false); → false\n    console.log(！true); → false\n    console.log(！false); → true\n    console.log(！！false); → false\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("逻辑运算符运算顺序\n同种运算符从前往后运算\n综合运算顺序：非、与、或")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    var n = null && undefined || !8;\n    console.log(n)\n    \x3c!-- 逻辑顺序：\n                8→ture\n                ！8→false\n                null→false\n                null && undefined→null\n                null || false → false--\x3e\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h5",{attrs:{id:"非正常情况1-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#非正常情况1-3"}},[s._v("#")]),s._v(" 非正常情况1")]),s._v(" "),n("p",[s._v("除了布尔类型的值之外，其他数据类型的值也可以参与逻辑运算，运算过程中需要将操作数隐式转换为布尔类型的值，参与判断计算，最终运行结果还是原来某个位置的数据；\n并不是所有逻辑与暗算返回结果都是布尔值，其他数据参与得到的就是数据本身；\n与：a&&b 如果a能够被隐式转换为false，那么返回a；否则返回b；\n或：a||b 如果a能够被转换为true，那么返回a；否则返回b；\n非：只会返回true或false")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<script>\n    console.log(null && "123"); →null\n    console.log(12 && "123"); →"123"\n    console.log(12 || "123" ); →12\n    console.log(undefined || null ); →null\n<\/script>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h4",{attrs:{id:"赋值运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[s._v("#")]),s._v(" 赋值运算符")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("符号")]),s._v(" "),n("th",[s._v("含义")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("=")]),s._v(" "),n("td",[s._v("等于")])]),s._v(" "),n("tr",[n("td",[s._v("+=")]),s._v(" "),n("td",[s._v("加等于")])]),s._v(" "),n("tr",[n("td",[s._v("-=")]),s._v(" "),n("td",[s._v("减等于")])]),s._v(" "),n("tr",[n("td",[s._v("*=")]),s._v(" "),n("td",[s._v("乘等于")])]),s._v(" "),n("tr",[n("td",[s._v("/=")]),s._v(" "),n("td",[s._v("除等于")])]),s._v(" "),n("tr",[n("td",[s._v("%=")]),s._v(" "),n("td",[s._v("取余等于")])]),s._v(" "),n("tr",[n("td",[s._v("++")]),s._v(" "),n("td",[s._v("递加")])]),s._v(" "),n("tr",[n("td",[s._v("--")]),s._v(" "),n("td",[s._v("递减")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    var a = 5;\n    a += 3;\n    console.log(a); →8\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h4",{attrs:{id:"一元运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一元运算符"}},[s._v("#")]),s._v(" 一元运算符")]),s._v(" "),n("p",[s._v("++和--也叫一元运算符，只有一个操作数\n++或--可以写在变量前也可以写在变量后，位置不同可能导致程序运行结果不同；\na++：++符号在变量之后，a++在参与程序过程中使用的原始没有加1的值，使用完后第二次用a变量时，a用的就是加1后的新值；先参与，后自加；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    var a = 5;\n    console.log(a++); →5\n    console.log(a); →6\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("++a：++符号在变量之前，++a在参与过程中整体就使用a加1之后的新值，使用完后第二次用a变量时，a用的也是加一的新值。先自加，后参与；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    var a = 5;\n    console.log(++a); →6\n    console.log(a); →6\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[n("font",{attrs:{color:"darkblue"}},[s._v("综合运算案例：")])],1),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    var a = 10,b = 20,c = 30;\n    var num = a++ + ++b + c++ + ++a;\n    console.log(num);\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("计算思路：\na=10 → a++=10 → a=11\nb=20 → ++b=21\nc=30 → c++=30\na=11 → ++a=11\n11+21+30+11=73")]),s._v(" "),n("h4",{attrs:{id:"运算优先级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运算优先级"}},[s._v("#")]),s._v(" 运算优先级")]),s._v(" "),n("p",[s._v("优先级从高到低\n1、()优先级最高；\n2、一元运算符 ++ -- ！；\n3、算数运算符 先* / % 后 + -；\n4、关系运算符 > >= <  <=;\n5、相等运算符 == != === !==；\n6、逻辑运算符 先&&后||；\n7、赋值运算符；\n"),n("font",{attrs:{color:"darkblue"}},[s._v("综合运算案例：")])],1),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script>\n    var a = 4;\n    var num = 1*(2+3)&&++a||5>6&&7<8||!9;\n    console.log(num); →5\n<script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("计算思路\nnum = 1 * 5 && ++a || 5>6 && 7<8 || !9\nnum = 1 * 5 && 5 || 5>6 && 7<8 || !9\nnum = 5 && 5 || 5>6 && 7<8 || !9\nnum = 5 && 5 || false && true || false\nnum = 5 || false || false\nnum = 5 || false\nnum = 5")])])}),[],!1,null,null,null);n.default=e.exports}}]);